<?xml version="1.0" ?>
<!-- 
  Copyright (C) 2021  Vincenzo D'Angelo
  This program is developed for Applicon srl by Vincenzo D'Angelo. 
  Its copy, use, redistribution or modification is prohibited, or requires
  you to ask for permission. All authorized modifications made to 
  the software are subject to the same conditions as the original software.
  This program is provided as is: WITHOUT ANY WARRANTY; without even the
  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  For a copy of the complete license please contact develop@applicon.it.
-->

<!-- Robot description for a ASV
    Conventions    
    ROS REP 105 Coordinate Frames for Mobile Platforms
    length      x-axis dimension
    width       y-axis dimension
    depth       z-axis dimension
 -->

<robot name="asv" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Include -->
    <xacro:include filename="$(find asv)/urdf/asv.gazebo"/>
    <xacro:include filename="$(find asv)/urdf/thruster.urdf.xacro"/>
    <xacro:include filename="$(find asv)/urdf/gps_imu.urdf.xacro"/>

    <!-- Robot's dimension parameters-->
    <xacro:property name="d" value="0.51"/> <!-- Distance between center and thruster's rotor axis -->
    <xacro:property name="h" value="0.05"/> <!-- Height between center and thruster's rotor axis -->
    <xacro:property name="alpha" value="${pi/4}"/> <!-- Thruster allocation angle (respect the vehicle ENU x-axis) -->
    <xacro:property name="hc" value="0.04"/> <!-- Height between inside center and bottom -->
    <xacro:property name="H" value="0.2"/> <!-- Height of the vehicle -->

    <!-- The base link - the reference link for the entire model -->
    <link name="base_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 ${-H/4}" />
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
            <material name="red" />
        </visual>
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>


    <!-- The vehicle hull link -->
    <link name="hull_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 ${-H/4}" />
            <geometry>
                <mesh filename="package://asv/meshes/body.stl" scale="1 1 1"/>
                <!--mesh filename="package://asv/meshes/body.stl" scale="0.001 0.001 0.001"/-->
                <!--box size="0.5 0.5 0.5"/-->
                <!--cylinder radius="0.4" length="0.2"/-->
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 ${-H/4}" />
            <geometry>
                <!--mesh filename="package://asv/meshes/body2.stl" scale="1 1 1"/-->
                <cylinder radius="0.4" length="0.2"/>
                <!--box size="0.5 0.5 0.5"/-->
                <!--mesh filename="package://asv/meshes/body_collision.stl"  scale="0.001 0.001 0.001"/-->
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0.000 0.000 0.000"/>
            <mass value="20.9057"/>
            <inertia ixx="0.7732" ixy="0.0096" ixz="2.9732e-04"
                                  iyy="0.7730" iyz="-0.0085"
                                               izz="1.2544"/>
        </inertial>
    </link>

    <gazebo reference="hull_link">
        <material>Gazebo/Orange</material>
        <provideFeedback>true</provideFeedback>
    </gazebo>

    <joint name="hull_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 ${-H/4}"/>
        <parent link="base_link" />
        <child link="hull_link" />
    </joint>

    <!-- Thruster -->
    <xacro:thruster_macro thruster_id="1">
        <origin xyz="${d/2*cos(alpha)} ${d/2*sin(alpha)} ${-H/4-h}" rpy="0 ${pi/2} ${-pi/4}" />
    </xacro:thruster_macro>
    
    <xacro:thruster_macro thruster_id="2">
        <origin xyz="${d/2*cos(alpha)} ${-d/2*sin(alpha)} ${-H/4-h}" rpy="0 ${pi/2} ${pi/4}" />
    </xacro:thruster_macro>
    
    <xacro:thruster_macro thruster_id="3">
        <origin xyz="${-d/2*cos(alpha)} ${-d/2*sin(alpha)} ${-H/4-h}" rpy="0 ${pi/2} ${3*pi/4}" />
    </xacro:thruster_macro>
    
    <xacro:thruster_macro thruster_id="4">
        <origin xyz="${-d/2*cos(alpha)} ${d/2*sin(alpha)} ${-H/4-h}" rpy="0 ${pi/2} ${-3*pi/4}" />
    </xacro:thruster_macro>


    <!-- GPS -->
    <xacro:gps_macro>
        <origin xyz="0 0 ${3/4*H}" rpy="0 0 0"/>
    </xacro:gps_macro>


    <!-- IMU -->
    <xacro:imu_macro>
        <origin xyz="0 0 ${2*H/4}" rpy="0 0 0"/>
    </xacro:imu_macro>

</robot>
